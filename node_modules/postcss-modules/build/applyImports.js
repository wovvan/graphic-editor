'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getImports(css) {
  var imports = {};

  css.each(function (importRule) {
    var selector = importRule.selector;

    if (!selector || selector.indexOf(':import') === -1) return;
    importRule.walkDecls(function (decl) {
      return imports[decl.prop] = decl.value;
    });
  });

  return imports;
}

function connectExportsWithImports(css) {
  css.each(function (importRule) {
    var selector = importRule.selector;

    if (!selector || selector.indexOf(':import') === -1) return;

    var exportRule = importRule.prev();
    if (!exportRule || !exportRule.selector === ':export') return;

    var exports = {};
    exportRule.walkDecls(function (decl) {
      return exports[decl.prop] = decl.value;
    });

    importRule.walkDecls(function (decl) {
      Object.keys(exports).forEach(function (key) {
        if (decl.value === key) decl.value = exports[key];
      });
    });
  });
}

function applyImports(css) {
  connectExportsWithImports(css);

  var imports = getImports(css);
  var importedClasses = Object.keys(imports);

  css.each(function (exportRule) {
    if (exportRule.selector !== ':export') return;

    exportRule.walkDecls(function (decl) {
      var exportedClasses = decl.value.split(' ');

      importedClasses.forEach(function (importedClass) {
        var index = exportedClasses.indexOf(importedClass);

        if (index > -1) {
          exportedClasses[index] = imports[importedClass];
          decl.value = exportedClasses.join(' ');
        }
      });
    });
  });
}

exports.default = _postcss2.default.plugin('postcss-modules:applyImports', function () {
  return applyImports;
});